# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2018 MonetDB B.V.

function aggr.covar(e1:bat[:lng], e2:bat[:lng]):dbl;
	# TODO:
	# replace lng by hge in case we have hge to avoid overflow
	e0:bat[:lng] := batcalc.*(e1,e2);
	s0:dbl := aggr.avg(e0);
	# ignore "mutual" NILs:
	e1n  := algebra.select(e1,    nil:lng,nil:lng,false,false,false);
	e12n := algebra.select(e1,e1n,nil:lng,nil:lng,false,false,false);
	s1:dbl := batcalc.avg(e1,e12n);
	s2:dbl := batcalc.avg(e2,e12n);
	s3:dbl := calc.*(s1,s2);
	v:dbl := calc.-(s0,s3);
	return v;
end aggr.covar;

function aggr.corr(e1:bat[:lng], e2:bat[:lng]):dbl;
	cv := aggr.covar(e1,e2);
	sd1 := aggr.stdev(e1);
	sd2 := aggr.stdev(e2);
	sd := calc.*(sd1,sd2);
	sdn := calc.==(sd,0:dbl);
	sds := calc.ifthenelse(sdn,nil:dbl,sd);
	res := calc./(cv,sds);
	return res;
end aggr.corr;

function aggr.subcovar(e1:bat[:lng], e2:bat[:lng], g:bat[:oid], e:bat[:any_2], f:bit):bat[:dbl];
	e0:bat[:lng] := batcalc.*(e1,e2);	# ? lng -> hge ?
	s0:bat[:dbl] := aggr.subavg(e0,g,e,f,true);
	# ignore "mutual" NILs:
	t := calc.not(f);
	e1n  := algebra.select(e1,    nil:lng,nil:lng,t,t,false);
	e12n := algebra.select(e1,e1n,nil:lng,nil:lng,t,t,false);
	s1:bat[:dbl] := aggr.subavg(e1,g,e,e12n,f,true);
	s2:bat[:dbl] := aggr.subavg(e2,g,e,e12n,f,true);
	s3:bat[:dbl] := batcalc.*(s1,s2);
	v:bat[:dbl] := batcalc.-(s0,s3);
	return v;
end aggr.subcovar;

function aggr.subcorr(e1:bat[:lng], e2:bat[:lng], g:bat[:oid],e:bat[:any_2], f:bit):bat[:dbl];
	cv := aggr.subcovar(e1,e2,g,e,f);
	sd1 := aggr.substdevp(e1,g,e,f,true);
	sd2 := aggr.substdevp(e2,g,e,f,true);
	sd := batcalc.*(sd1,sd2);
	sdn := batcalc.==(sd,0:dbl);
	sds := batcalc.ifthenelse(sdn,nil:dbl,sd);
	res := batcalc./(cv,sds);
	return res;
end aggr.subcorr;
